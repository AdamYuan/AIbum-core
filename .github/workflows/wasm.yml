name: WASM

on:
  push:
  pull_request:
  release:

jobs:
  build:
    name: "WebAssembly"
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            artifact: "aibum_core_wasm.7z",
            archiver: "7z a",
          }

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build emscripten

      - name: Make Directories
        shell: bash
        run: |
          mkdir build-basic
          mkdir build-simd
          mkdir build-threads
          mkdir build-simd-threads
          mkdir install

      - name: Configure
        shell: bash
        run: |
          cmake \
            -S . \
            -B build-basic \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_TOOLCHAIN_FILE=/usr/share/emscripten/cmake/Modules/Platform/Emscripten.cmake \
            -DAIBUM_WASM_ONLY=1 -DAIBUM_WASM_SIMD=0 -DAIBUM_WASM_THREADS=0 \
            -GNinja \
            -DCMAKE_INSTALL_PREFIX:PATH=install
          cmake \
            -S . \
            -B build-simd \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_TOOLCHAIN_FILE=/usr/share/emscripten/cmake/Modules/Platform/Emscripten.cmake \
            -DAIBUM_WASM_ONLY=1 -DAIBUM_WASM_SIMD=1 -DAIBUM_WASM_THREADS=0 \
            -GNinja \
            -DCMAKE_INSTALL_PREFIX:PATH=install
          cmake \
            -S . \
            -B build-threads \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_TOOLCHAIN_FILE=/usr/share/emscripten/cmake/Modules/Platform/Emscripten.cmake \
            -DAIBUM_WASM_ONLY=1 -DAIBUM_WASM_SIMD=0 -DAIBUM_WASM_THREADS=1 \
            -GNinja \
            -DCMAKE_INSTALL_PREFIX:PATH=install
          cmake \
            -S . \
            -B build-simd-threads \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_TOOLCHAIN_FILE=/usr/share/emscripten/cmake/Modules/Platform/Emscripten.cmake \
            -DAIBUM_WASM_ONLY=1 -DAIBUM_WASM_SIMD=1 -DAIBUM_WASM_THREADS=1 \
            -GNinja \
            -DCMAKE_INSTALL_PREFIX:PATH=install

      - name: Build
        shell: bash
        run: |
          cmake --build build-basic
          cmake --build build-simd
          cmake --build build-threads
          cmake --build build-simd-threads

      - name: Install Strip
        shell: bash
        run: |
          cmake --install build-basic --strip
          cmake --install build-simd --strip
          cmake --install build-threads --strip
          cmake --install build-simd-threads --strip

      - name: Pack
        shell: bash
        working-directory: install
        run: |
          ls -laR
          ${{ matrix.config.archiver }} ../${{ matrix.config.artifact }} .

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          path: ./${{ matrix.config.artifact }}
          name: ${{ matrix.config.artifact }}

      - name: Upload release asset
        if: github.event_name == 'release' && (github.event.action == 'published' || github.event.action == 'created')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.config.artifact }}
          asset_name: ${{ matrix.config.artifact }}
          asset_content_type: application/x-7z-compressed
